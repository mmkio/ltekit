{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MMIO LTE Kit # MMIO LTE Kit \uc740 \uc774\ub3d9\ud1b5\uc2e0 LTE \ubaa8\ub4c8\uc744 \uc774\uc6a9\ud55c \ub370\uc774\ud130 \ud1b5\uc2e0 \uc194\ub8e8\uc158\uc744 \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. 3G/4G/LTE \ud1b5\uc2e0 \ubaa8\ub4c8\uc740 \ud3b8\ub9ac\ud558\uac8c PC \ubc0f \uc784\ubca0\ub514\ub4dc \ub2e8\ub9d0 \uc7a5\uce58\uc5d0\uc11c \uace0\uc18d \uc778\ud130\ub137 \uc5f0\uacb0\uc744 \ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. IoT \uc81c\uc5b4 \ubc0f \uace0\uc18d \ub370\uc774\ud0c0 \uc804\uc1a1\uc744 \uc9c0\uc6d0\uc774 \uac00\ub2a5\ud558\uc5ec, \uc601\uc0c1 \ub370\uc774\ud0c0 \ubc0f \ub3d9\uc601\uc0c1 \uc804\uc1a1\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc18d \ud1b5\uc2e0 \ubaa8\ub4c8\uc785\ub2c8\ub2e4. \uc8fc\uc694 \uc751\uc6a9\ubd84\uc57c # Video/Music Streaming Large Data Downloads and Uploads LTE Dongle/Router Mobile Internet Hotspot High-speed GPS Tracking(\uc790\uc0b0 \uad00\ub9ac) Real-time Environmental Monitoring Smart City & Agriculture Applications Smart Parking Security & Asset tracking M2M, Factory Automation \uc6b4\uc6a9 \uc2dc \uac00\ub2a5\ud55c \uc2dc\uc2a4\ud15c # Raspberry Pi ubuntu Linux PC Window OS PC MMIO \uc194\ub8e8\uc158 \uc81c\uacf5 # SIM CARD \uc81c\uacf5 \ubc0f LTE \ud1b5\uc2e0 \uc194\ub8e8\uc158 \uc81c\uacf5 \ud1b5\uc2e0 API \uc124\uc815 \ubc0f \ud1b5\uc2e0 \ub370\uc774\ud130 \ucee4\uc2a4\ud2b8\ub9c8\uc774\uc9d5 \uc194\ub8e8\uc158 \uc81c\uacf5 \ud1b5\uc2e0 \ubaa8\ub380 \uc778\ud130\ud398\uc774\uc2a4 \uc124\uacc4 \ubc0f \ud558\ub4dc\uc6e8\uc5b4 \uc194\ub8e8\uc158 \uc81c\uacf5 \ub370\uc774\ud130 \ud1b5\uc2e0 \uc7a5\ube44 \uc124\uacc4 \ubc0f \uc2e4\uc2dc\uac04 \ub370\uc774\ud130 \uc218\uc9d1 \uc7a5\uce58 \uc194\ub8e8\uc158 \uc81c\uacf5","title":"MMIO LTE Kit"},{"location":"#mmio-lte-kit","text":"MMIO LTE Kit \uc740 \uc774\ub3d9\ud1b5\uc2e0 LTE \ubaa8\ub4c8\uc744 \uc774\uc6a9\ud55c \ub370\uc774\ud130 \ud1b5\uc2e0 \uc194\ub8e8\uc158\uc744 \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. 3G/4G/LTE \ud1b5\uc2e0 \ubaa8\ub4c8\uc740 \ud3b8\ub9ac\ud558\uac8c PC \ubc0f \uc784\ubca0\ub514\ub4dc \ub2e8\ub9d0 \uc7a5\uce58\uc5d0\uc11c \uace0\uc18d \uc778\ud130\ub137 \uc5f0\uacb0\uc744 \ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. IoT \uc81c\uc5b4 \ubc0f \uace0\uc18d \ub370\uc774\ud0c0 \uc804\uc1a1\uc744 \uc9c0\uc6d0\uc774 \uac00\ub2a5\ud558\uc5ec, \uc601\uc0c1 \ub370\uc774\ud0c0 \ubc0f \ub3d9\uc601\uc0c1 \uc804\uc1a1\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc18d \ud1b5\uc2e0 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.","title":"MMIO LTE Kit"},{"location":"#_1","text":"Video/Music Streaming Large Data Downloads and Uploads LTE Dongle/Router Mobile Internet Hotspot High-speed GPS Tracking(\uc790\uc0b0 \uad00\ub9ac) Real-time Environmental Monitoring Smart City & Agriculture Applications Smart Parking Security & Asset tracking M2M, Factory Automation","title":"\uc8fc\uc694 \uc751\uc6a9\ubd84\uc57c"},{"location":"#_2","text":"Raspberry Pi ubuntu Linux PC Window OS PC","title":"\uc6b4\uc6a9 \uc2dc \uac00\ub2a5\ud55c \uc2dc\uc2a4\ud15c"},{"location":"#mmio","text":"SIM CARD \uc81c\uacf5 \ubc0f LTE \ud1b5\uc2e0 \uc194\ub8e8\uc158 \uc81c\uacf5 \ud1b5\uc2e0 API \uc124\uc815 \ubc0f \ud1b5\uc2e0 \ub370\uc774\ud130 \ucee4\uc2a4\ud2b8\ub9c8\uc774\uc9d5 \uc194\ub8e8\uc158 \uc81c\uacf5 \ud1b5\uc2e0 \ubaa8\ub380 \uc778\ud130\ud398\uc774\uc2a4 \uc124\uacc4 \ubc0f \ud558\ub4dc\uc6e8\uc5b4 \uc194\ub8e8\uc158 \uc81c\uacf5 \ub370\uc774\ud130 \ud1b5\uc2e0 \uc7a5\ube44 \uc124\uacc4 \ubc0f \uc2e4\uc2dc\uac04 \ub370\uc774\ud130 \uc218\uc9d1 \uc7a5\uce58 \uc194\ub8e8\uc158 \uc81c\uacf5","title":"MMIO \uc194\ub8e8\uc158 \uc81c\uacf5"},{"location":"app-gps/","text":"GPS \uc218\uc2e0\uac12 \uac00\uc838\uc624\uae30 # 1.\ud504\ub85c\uadf8\ub7a8 \ub2e4\uc6b4\ub85c\ub4dc pi> cd ~ pi> wget github.com/letmodule/gpstest.py 1.\ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 pi> sudo python gpstest.py \ud504\ub85c\uadf8\ub7a8 \ucf54\ub4dc from time import sleep import serial portwrite = \"/dev/ttyUSB2\" port = \"/dev/ttyUSB1\" def parseGPS(data): print \"raw:\", data #prints raw data if data[0:6] == \"$GPRMC\": sdata = data.split(\",\") if sdata[2] == 'V': print \"no satellite data available\" return print \"-----Parsing GPRMC-----\" time = sdata[1][0:2] + \":\" + sdata[1][2:4] + \":\" + sdata[1][4:6] lat = decode(sdata[3]) #latitude dirLat = sdata[4] #latitude direction N/S lon = decode(sdata[5]) #longitute dirLon = sdata[6] #longitude direction E/W speed = sdata[7] #Speed in knots trCourse = sdata[8] #True course date = sdata[9][0:2] + \"/\" + sdata[9][2:4] + \"/\" + sdata[9][4:6] #date variation = sdata[10] #variation degreeChecksum = sdata[12] dc = degreeChecksum.split(\"*\") degree = dc[0] #degree checksum = dc[1] #checksum print \"time : %s, latitude : %s(%s), longitude : %s(%s), speed : %s, True Course : %s, Date : %s, Magnetic Variation : %s(%s),Checksum : %s \"% (time,lat,dirLat,lon,dirLon,speed,trCourse,date,variation,degree,checksum) else: print \"Printed data is \",data[0:6] def decode(coord): #Converts DDDMM.MMMMM -> DD deg MM.MMMMM min x = coord.split(\".\") head = x[0] tail = x[1] deg = head[0:-2] min = head[-2:] return deg + \" deg \" + min + \".\" + tail + \" min\" print \"Connecting port\" serw = serial.Serial(portwrite, baudrate = 115200, timeout = 1,rtscts=True, dsrdtr=True) serw.write('AT+QGPS=1\\r') serw.close() sleep(0.5) print \"Receiving GPS data\" ser = serial.Serial(port, baudrate = 115200, timeout = 0.5,rtscts=True, dsrdtr=True) while True: data = ser.readline() parseGPS(data)","title":"3.1.GPS \uc2e0\ud638 \uc218\uc2e0"},{"location":"app-gps/#gps","text":"1.\ud504\ub85c\uadf8\ub7a8 \ub2e4\uc6b4\ub85c\ub4dc pi> cd ~ pi> wget github.com/letmodule/gpstest.py 1.\ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 pi> sudo python gpstest.py \ud504\ub85c\uadf8\ub7a8 \ucf54\ub4dc from time import sleep import serial portwrite = \"/dev/ttyUSB2\" port = \"/dev/ttyUSB1\" def parseGPS(data): print \"raw:\", data #prints raw data if data[0:6] == \"$GPRMC\": sdata = data.split(\",\") if sdata[2] == 'V': print \"no satellite data available\" return print \"-----Parsing GPRMC-----\" time = sdata[1][0:2] + \":\" + sdata[1][2:4] + \":\" + sdata[1][4:6] lat = decode(sdata[3]) #latitude dirLat = sdata[4] #latitude direction N/S lon = decode(sdata[5]) #longitute dirLon = sdata[6] #longitude direction E/W speed = sdata[7] #Speed in knots trCourse = sdata[8] #True course date = sdata[9][0:2] + \"/\" + sdata[9][2:4] + \"/\" + sdata[9][4:6] #date variation = sdata[10] #variation degreeChecksum = sdata[12] dc = degreeChecksum.split(\"*\") degree = dc[0] #degree checksum = dc[1] #checksum print \"time : %s, latitude : %s(%s), longitude : %s(%s), speed : %s, True Course : %s, Date : %s, Magnetic Variation : %s(%s),Checksum : %s \"% (time,lat,dirLat,lon,dirLon,speed,trCourse,date,variation,degree,checksum) else: print \"Printed data is \",data[0:6] def decode(coord): #Converts DDDMM.MMMMM -> DD deg MM.MMMMM min x = coord.split(\".\") head = x[0] tail = x[1] deg = head[0:-2] min = head[-2:] return deg + \" deg \" + min + \".\" + tail + \" min\" print \"Connecting port\" serw = serial.Serial(portwrite, baudrate = 115200, timeout = 1,rtscts=True, dsrdtr=True) serw.write('AT+QGPS=1\\r') serw.close() sleep(0.5) print \"Receiving GPS data\" ser = serial.Serial(port, baudrate = 115200, timeout = 0.5,rtscts=True, dsrdtr=True) while True: data = ser.readline() parseGPS(data)","title":"GPS \uc218\uc2e0\uac12 \uac00\uc838\uc624\uae30"},{"location":"app-livestream/","text":"LiveStream \uc601\uc0c1\ubcf4\ub0b4\uae30 # Sixfab 3G/LTE Shields provides very high speed internet connection. Use Raspberry Pi camera and you can make live stream to Youtube and Facebook. You can use following transactions for work. 1.Firstly, Connect your Raspberry Pi to internet and run sudo apt-get update to update your Raspberry Pi 2.Make Tutorial3 to connect internet over Mobile. 3.For live stream you can use FFMpeg. 3.1 Install h264 Support - cd /usr/src - git clone git://git.videolan.org/x264 - cd x264 - ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl - make - sudo make install 3.2. Install FFMpeg - cd /usr/src - git clone https://github.com/FFmpeg/FFmpeg.git - cd ffmpeg - sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree - make if you have a Model B+ and later version, you can use make -j4 instead of just make to take advantage of all four cores! - sudo make install 4.Signup for a facebook or youtube account and get [SERVER URL]/[STREAM NAME] 5.At last, run this command to start live raspivid -o - -t 0 -vf -hf -fps 30 -b 6000000 | ffmpeg -re -ar 44100 -ac 2 -acodec pcm_s16le -f s16le -ac 2 -i /dev/zero -f h264 -i - -vcodec copy -acodec aac -ab 128k -g 50 -strict experimental -f flv [SERVER URL]/[STREAM NAME]","title":"3.2.\ub3d9\uc601\uc0c1 \uc804\uc1a1"},{"location":"app-livestream/#livestream","text":"Sixfab 3G/LTE Shields provides very high speed internet connection. Use Raspberry Pi camera and you can make live stream to Youtube and Facebook. You can use following transactions for work. 1.Firstly, Connect your Raspberry Pi to internet and run sudo apt-get update to update your Raspberry Pi 2.Make Tutorial3 to connect internet over Mobile. 3.For live stream you can use FFMpeg. 3.1 Install h264 Support - cd /usr/src - git clone git://git.videolan.org/x264 - cd x264 - ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl - make - sudo make install 3.2. Install FFMpeg - cd /usr/src - git clone https://github.com/FFmpeg/FFmpeg.git - cd ffmpeg - sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree - make if you have a Model B+ and later version, you can use make -j4 instead of just make to take advantage of all four cores! - sudo make install 4.Signup for a facebook or youtube account and get [SERVER URL]/[STREAM NAME] 5.At last, run this command to start live raspivid -o - -t 0 -vf -hf -fps 30 -b 6000000 | ffmpeg -re -ar 44100 -ac 2 -acodec pcm_s16le -f s16le -ac 2 -i /dev/zero -f h264 -i - -vcodec copy -acodec aac -ab 128k -g 50 -strict experimental -f flv [SERVER URL]/[STREAM NAME]","title":"LiveStream \uc601\uc0c1\ubcf4\ub0b4\uae30"},{"location":"app-mail/","text":"\uba54\uc77c \ubcf4\ub0b4\uae30 # Register a Twitter App with this tutorial to get Consumer Key etc. Install Python and required libraries with following commands sudo apt-get install python-setuptools sudo easy_install pip sudo pip install smtplib Download source code Link wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial7/SecuritySystem.py Make it executable sudo chmod +x SecuritySystem.py Run it sudo python SecuritySystem.py \uc18c\uc2a4\ucf54\ub4dc import RPi.GPIO as GPIO import picamera from time import sleep from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart # xyz@xyz.com is an example. You can configure. fromEmail='abc@xyz.com' password='XXXXXX' toEmail='xyz@xyz.com' smtpEmail='smtp.xyz.com' smtpPort=587 def SendMail(ImgFileName): img_data = open(ImgFileName, 'rb').read() msg = MIMEMultipart() msg['Subject'] = 'Security System' msg['From'] = 'Raspberry Pi' msg['To'] = toEmail text = MIMEText(\"Raspberry Security System\") msg.attach(text) image = MIMEImage(img_data, name=os.path.basename(ImgFileName)) msg.attach(image) s = smtplib.SMTP(smtpEmail, smtpPort) s.ehlo() s.starttls() s.ehlo() s.login(fromEmail, password) s.sendmail(fromEmail,toEmail, msg.as_string()) s.quit() camera=picamera.PiCamera() camera.exposure_mode = 'sports' camera.resolution = (320,240) GPIO.setmode(GPIO.BCM) GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) var = 1 while var == 1 : if(GPIO.input(21)!=1): print GPIO.input(21) print(\"low\") else: print(\"high\") camera.capture('image.jpg') print ('photo captured') print('photo opened and sending') SendMail('image.jpg') print (\"photo sended\") time.sleep(10)","title":"3.4.\uba54\uc77c \ubcf4\ub0b4\uae30"},{"location":"app-mail/#_1","text":"Register a Twitter App with this tutorial to get Consumer Key etc. Install Python and required libraries with following commands sudo apt-get install python-setuptools sudo easy_install pip sudo pip install smtplib Download source code Link wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial7/SecuritySystem.py Make it executable sudo chmod +x SecuritySystem.py Run it sudo python SecuritySystem.py \uc18c\uc2a4\ucf54\ub4dc import RPi.GPIO as GPIO import picamera from time import sleep from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart # xyz@xyz.com is an example. You can configure. fromEmail='abc@xyz.com' password='XXXXXX' toEmail='xyz@xyz.com' smtpEmail='smtp.xyz.com' smtpPort=587 def SendMail(ImgFileName): img_data = open(ImgFileName, 'rb').read() msg = MIMEMultipart() msg['Subject'] = 'Security System' msg['From'] = 'Raspberry Pi' msg['To'] = toEmail text = MIMEText(\"Raspberry Security System\") msg.attach(text) image = MIMEImage(img_data, name=os.path.basename(ImgFileName)) msg.attach(image) s = smtplib.SMTP(smtpEmail, smtpPort) s.ehlo() s.starttls() s.ehlo() s.login(fromEmail, password) s.sendmail(fromEmail,toEmail, msg.as_string()) s.quit() camera=picamera.PiCamera() camera.exposure_mode = 'sports' camera.resolution = (320,240) GPIO.setmode(GPIO.BCM) GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) var = 1 while var == 1 : if(GPIO.input(21)!=1): print GPIO.input(21) print(\"low\") else: print(\"high\") camera.capture('image.jpg') print ('photo captured') print('photo opened and sending') SendMail('image.jpg') print (\"photo sended\") time.sleep(10)","title":"\uba54\uc77c \ubcf4\ub0b4\uae30"},{"location":"app-twitter/","text":"\ud2b8\uc704\ud2b8 \uba54\uc2dc\uc9c0 \ubcf4\ub0b4\uae30 # or 3G/LTE Shield - Make Tutorial 3 to connect internet over Mobile. Register a Twitter App with this tutorial to get Consumer Key etc. Install Python and required libraries with following commands sudo apt-get install python-setuptools sudo easy_install pip sudo pip install twython Download source code Link wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial5/Tiwitting.py Make it executable sudo chmod +x Tiwitting.py Let's send tweet python Tiwitting.py 'Hello Everyone, I am using Sixfab Iot Shield!' https://stackabuse.com/accessing-the-twitter-api-with-python/ \uc18c\uc2a4\ucf54\ub4dc import sys import picamera from twython import Twython CONSUMER_KEY = '***************YOUR DATA*****************' CONSUMER_SECRET = '***************YOUR DATA*****************' ACCESS_KEY = '***************YOUR DATA*****************' ACCESS_SECRET = '***************YOUR DATA*****************' api = Twython(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET) camera=picamera.PiCamera() camera.resolution = (1024, 768) camera.capture('image.jpg') photo=open('image.jpg','rb') api.update_status_with_media(media=photo, status=sys.argv[1])","title":"3.3.\ud2b8\uc704\ud2b8 \ubcf4\ub0b4\uae30"},{"location":"app-twitter/#_1","text":"or 3G/LTE Shield - Make Tutorial 3 to connect internet over Mobile. Register a Twitter App with this tutorial to get Consumer Key etc. Install Python and required libraries with following commands sudo apt-get install python-setuptools sudo easy_install pip sudo pip install twython Download source code Link wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial5/Tiwitting.py Make it executable sudo chmod +x Tiwitting.py Let's send tweet python Tiwitting.py 'Hello Everyone, I am using Sixfab Iot Shield!' https://stackabuse.com/accessing-the-twitter-api-with-python/ \uc18c\uc2a4\ucf54\ub4dc import sys import picamera from twython import Twython CONSUMER_KEY = '***************YOUR DATA*****************' CONSUMER_SECRET = '***************YOUR DATA*****************' ACCESS_KEY = '***************YOUR DATA*****************' ACCESS_SECRET = '***************YOUR DATA*****************' api = Twython(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET) camera=picamera.PiCamera() camera.resolution = (1024, 768) camera.capture('image.jpg') photo=open('image.jpg','rb') api.update_status_with_media(media=photo, status=sys.argv[1])","title":"\ud2b8\uc704\ud2b8 \uba54\uc2dc\uc9c0 \ubcf4\ub0b4\uae30"},{"location":"install/","text":"Raspberry Pi Kernel update for 3G/LTE shield's usb drivers # Original Raspbian Jessie kernel version 4.4 doesn't support Quectel EC25/UC20 modules, you can update your Raspberry Pi's kernel. Run sudo rpi-update command and update kernel your Raspberry pi Reboot your machine #> sudo reboot You can use your modem with /dev/ttyUSB3 #> ls /dev/ttyUSB* Issues: If ttyUSB3 does not appear under folder /dev/ when the 3G ( UC20 ) module is plugged in, and 'device not accepting device address XXX, error -71' appears on the 'dmesg' output, please change your USB cable.","title":"Raspberry Pi Kernel update for 3G/LTE shield's usb drivers"},{"location":"install/#raspberry-pi-kernel-update-for-3glte-shields-usb-drivers","text":"Original Raspbian Jessie kernel version 4.4 doesn't support Quectel EC25/UC20 modules, you can update your Raspberry Pi's kernel. Run sudo rpi-update command and update kernel your Raspberry pi Reboot your machine #> sudo reboot You can use your modem with /dev/ttyUSB3 #> ls /dev/ttyUSB* Issues: If ttyUSB3 does not appear under folder /dev/ when the 3G ( UC20 ) module is plugged in, and 'device not accepting device address XXX, error -71' appears on the 'dmesg' output, please change your USB cable.","title":"Raspberry Pi Kernel update for 3G/LTE shield's usb drivers"},{"location":"lte-kit/","text":"LTE \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8 Kit # \uad6c\uc131 \ud488\ubaa9 # 1x 3G/4G-LTE Base USB shield. USB Connection Cable ( Shield <--> USB HOST(Board)) Antenna LTE Full Band PCB Antenna Sim Card (\ubb34\uc81c\ud55c LTE \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8\uc6a9 10\uc77c)","title":"1.\ud0a4\ud2b8\uad6c\uc131"},{"location":"lte-kit/#lte-kit","text":"","title":"LTE \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8 Kit"},{"location":"lte-kit/#_1","text":"1x 3G/4G-LTE Base USB shield. USB Connection Cable ( Shield <--> USB HOST(Board)) Antenna LTE Full Band PCB Antenna Sim Card (\ubb34\uc81c\ud55c LTE \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8\uc6a9 10\uc77c)","title":"\uad6c\uc131 \ud488\ubaa9"},{"location":"ppp_connect/","text":"Make a PPP internet connection with 3G/LTE Shields on Raspberry Pi # You can use Sixfab 3G/LTE Shields to connect internet with PPP connection. You can use following transactions for work. Firstly, Connect your Raspberry Pi to internet and run sudo apt-get update to update your Raspberry Pi Make First Tutorial to add Quectel Module support to your kernel. Download ppp-creator.sh script and run. Script will install ppp and creates config files. wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial3/ppp-creator.sh chmod +x ./ppp-creator.sh sudo ./ppp-creator.sh INTERNET ttyUSB3 # INTERNET is APN, check your cellular Run sudo pppd call gprs run ifconfig ppp0 at terminal window to see following outputs and see your ip ``` ppp0 Link encap:Point-to-Point Protocol inet addr:XX.XX.XXX.XXX P-t-P:XX.XX.XX.XX Mask:255.255.255.255 UP POINTOPOINT RUNNING NOARP MULTICAST MTU:1500 Metric:1 RX packets:38 errors:0 dropped:0 overruns:0 frame:0 TX packets:39 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:3 RX bytes:3065 (2.9 KiB) TX bytes:2657 (2.5 KiB) ```","title":"Make a PPP internet connection with 3G/LTE Shields on Raspberry Pi"},{"location":"ppp_connect/#make-a-ppp-internet-connection-with-3glte-shields-on-raspberry-pi","text":"You can use Sixfab 3G/LTE Shields to connect internet with PPP connection. You can use following transactions for work. Firstly, Connect your Raspberry Pi to internet and run sudo apt-get update to update your Raspberry Pi Make First Tutorial to add Quectel Module support to your kernel. Download ppp-creator.sh script and run. Script will install ppp and creates config files. wget https://raw.githubusercontent.com/sixfab/rpiShields/master/tutorials/tutorial3/ppp-creator.sh chmod +x ./ppp-creator.sh sudo ./ppp-creator.sh INTERNET ttyUSB3 # INTERNET is APN, check your cellular Run sudo pppd call gprs run ifconfig ppp0 at terminal window to see following outputs and see your ip ``` ppp0 Link encap:Point-to-Point Protocol inet addr:XX.XX.XXX.XXX P-t-P:XX.XX.XX.XX Mask:255.255.255.255 UP POINTOPOINT RUNNING NOARP MULTICAST MTU:1500 Metric:1 RX packets:38 errors:0 dropped:0 overruns:0 frame:0 TX packets:39 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:3 RX bytes:3065 (2.9 KiB) TX bytes:2657 (2.5 KiB) ```","title":"Make a PPP internet connection with 3G/LTE Shields on Raspberry Pi"},{"location":"pre-check/","text":"\ub4dc\ub77c\uc774\ube0c \uc124\uce58 \ubc0f \uc7a5\ube44\uc810\uac80 # Original Raspbian Jessie kernel version 4.4 doesn't support Quectel EC25/UC20 modules, you can update your Raspberry Pi's kernel. Run sudo rpi-update command and update kernel your Raspberry pi Reboot your machine pi> sudo reboot You can use your modem with /dev/ttyUSB3 #> ls /dev/ttyUSB* Issues: If ttyUSB3 does not appear under folder /dev/ when the 3G ( UC20 ) module is plugged in, and 'device not accepting device address XXX, error -71' appears on the 'dmesg' output, please change your USB cable. Reboot your machine kkk dsafasf","title":"\ub4dc\ub77c\uc774\ube0c \uc124\uce58 \ubc0f \uc7a5\ube44\uc810\uac80"},{"location":"pre-check/#_1","text":"Original Raspbian Jessie kernel version 4.4 doesn't support Quectel EC25/UC20 modules, you can update your Raspberry Pi's kernel. Run sudo rpi-update command and update kernel your Raspberry pi Reboot your machine pi> sudo reboot You can use your modem with /dev/ttyUSB3 #> ls /dev/ttyUSB* Issues: If ttyUSB3 does not appear under folder /dev/ when the 3G ( UC20 ) module is plugged in, and 'device not accepting device address XXX, error -71' appears on the 'dmesg' output, please change your USB cable. Reboot your machine kkk dsafasf","title":"\ub4dc\ub77c\uc774\ube0c \uc124\uce58 \ubc0f \uc7a5\ube44\uc810\uac80"},{"location":"setting-raspberry/","text":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc900\ube44 # \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc124\uce58 # \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc774\ubbf8\uc9c0 \uad7d\uae30 # SD CARD 8M \uc774\uc0c1\uc744 \uad6c\ud558\uc5ec, \uc774\ubbf8\uc9c0\ub97c \ub2e4\uc6b4\ub85c\ub4dc \ubc1b\uace0 ether \ud504\ub85c\uadf8\ub7a8\uc744 \uc774\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \uad7d\ub294\ub2e4. SD CARD\ub97c \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 SD \uce74\ub4dc \uc2ac\ub86f\uc5d0 \uc0bd\uc785\ud558\uc2dc\uace0, \ud0a4\ubcf4\ub4dc, \ub9c8\uc6b0\uc2a4, \ubaa8\ub2c8\ud130, \uc804\uc6d0\uc744 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uae30\ubcf8 \uc124\uc815 # COMMAND \ucc3d\uc744 \ud558\ub098 \uc624\ud508\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc740 \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud55c\ub2e4. pi> sudo raspi-config change User Password (default : raspberry) Localization options Chage Locale ko_KR(UTF8) Change Timezone Asia Seoul KeyBoard Generic 105-Key(Intel)PC Other Korea Korean-Korean(101-104 key compatible) The default for the keyboard layout No compose key No \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5c5\ub370\uc774\ud2b8 # pi> sudo apt update pi> sudo apt upgrade pi> sudo apt install ibus pi> sudo apt install ibus-hangul pi> sudo apt install fonts-unfonts-core pi> sudo reboot 1.USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 2.USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 USB \uc5f0\uacb0 3.wwan0 \uc774\ub354\ub137 Port \uc0dd\uc131 \ud655\uc778 pi> ifconfig 8.\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \ub2e4\ub978 \uc778\ud130\ub137 \uc5f0\uacb0 \uc124\uc815 \uc0ac\uc6a9\uc911\uc9c0 pi> ifconfig pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down 3.libqmi-uitils \uc124\uce58 pi> sudo apt install libqmi-utils pi> sudo qmi-network /dev/cdc-wdm0 start pi> dhclient -v wwan0 * \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr 10.\uc774\ub354\ub137 \ud3ec\ud2b8 \uc0dd\uc131 \ubc0f \uc0c1\ud0dc\ud655\uc778 pi> ifconfig ppp0 10.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778 pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc900\ube44"},{"location":"setting-raspberry/#_1","text":"","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc900\ube44"},{"location":"setting-raspberry/#_2","text":"","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc124\uce58"},{"location":"setting-raspberry/#_3","text":"SD CARD 8M \uc774\uc0c1\uc744 \uad6c\ud558\uc5ec, \uc774\ubbf8\uc9c0\ub97c \ub2e4\uc6b4\ub85c\ub4dc \ubc1b\uace0 ether \ud504\ub85c\uadf8\ub7a8\uc744 \uc774\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \uad7d\ub294\ub2e4. SD CARD\ub97c \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 SD \uce74\ub4dc \uc2ac\ub86f\uc5d0 \uc0bd\uc785\ud558\uc2dc\uace0, \ud0a4\ubcf4\ub4dc, \ub9c8\uc6b0\uc2a4, \ubaa8\ub2c8\ud130, \uc804\uc6d0\uc744 \uc5f0\uacb0\ud569\ub2c8\ub2e4.","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc774\ubbf8\uc9c0 \uad7d\uae30"},{"location":"setting-raspberry/#_4","text":"COMMAND \ucc3d\uc744 \ud558\ub098 \uc624\ud508\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc740 \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud55c\ub2e4. pi> sudo raspi-config change User Password (default : raspberry) Localization options Chage Locale ko_KR(UTF8) Change Timezone Asia Seoul KeyBoard Generic 105-Key(Intel)PC Other Korea Korean-Korean(101-104 key compatible) The default for the keyboard layout No compose key No","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uae30\ubcf8 \uc124\uc815"},{"location":"setting-raspberry/#_5","text":"pi> sudo apt update pi> sudo apt upgrade pi> sudo apt install ibus pi> sudo apt install ibus-hangul pi> sudo apt install fonts-unfonts-core pi> sudo reboot 1.USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 2.USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 USB \uc5f0\uacb0 3.wwan0 \uc774\ub354\ub137 Port \uc0dd\uc131 \ud655\uc778 pi> ifconfig 8.\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \ub2e4\ub978 \uc778\ud130\ub137 \uc5f0\uacb0 \uc124\uc815 \uc0ac\uc6a9\uc911\uc9c0 pi> ifconfig pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down 3.libqmi-uitils \uc124\uce58 pi> sudo apt install libqmi-utils pi> sudo qmi-network /dev/cdc-wdm0 start pi> dhclient -v wwan0 * \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr 10.\uc774\ub354\ub137 \ud3ec\ud2b8 \uc0dd\uc131 \ubc0f \uc0c1\ud0dc\ud655\uc778 pi> ifconfig ppp0 10.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778 pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5c5\ub370\uc774\ud2b8"},{"location":"use-raspberry-ppp/","text":"1.LTE Module \uc5f0\uacb0 # USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc804\uc6d0, \ubaa8\ub2c8\ud130, \ud0a4\ubcf4\ub4dc, \ub9c8\uc6b0\uc2a4 \ucf00\uc774\ube14 \uc5f0\uacb0. simcard \uc0bd\uc785 2.USB \uc5f0\uacb0\uc0c1\ud0dc \ud655\uc778 # USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 (USB \uc5f0\uacb0) \ubc0f \ud655\uc778 pi> cd ~ #--> \ud648\ub514\ub809\ud1a0\ub9ac \uc774\ub3d9 pi> ls /dev ttyUSB1, ttyUSB2, ttyUSB3 \uc758 \uc5f0\uacb0 \uc0c1\ud0dc\ub97c \ud655\uc778\ud55c\ub2e4. 3.pppd \ud504\ub85c\uadf8\ub7a8 \uc124\uce58 \ubc0f \uc2e4\ud589 # pi> sudo apt install ppp #--> pppd \ud504\ub85c\uadf8\ub7a8 \uc124\uce58 4.ppp \uc2a4\ud06c\ub9bd\ud2b8 \ud30c\uc77c\uc744 \uc2e4\ud589 # \uc2a4\ud06c\ub9bd\ub4dc\ub97c wget \uc744 \uc774\uc6a9\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc \ud55c\ub2e4. pi> wget https://raw.githubusercontent.com/mmkio/ltekit/master/doc/pppd-ec25-make.sh pi> sudo chmod +x ./pppd-ec25-make.sh pi> sudo ./pppd-ec25-make.sh lte-internet.sktelecom.com #--> PN:'lte-internet.sktelecom.com' Note \"lte-internet.sktelecom.com\"\uc740 \ud1b5\uc2e0\uc0ac \uc811\uc18d APN\uc744 \ub098\ud0c0\ub0b4\uba70 \uc0ac\uc6a9\ub418\ub294 \ud1b5\uc2e0 SIM \uce74\ub4dc\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub41c\ub2e4. APN \uc740 SIM \uce74\ub4dc\uc640 \ud568\uaed8 \uc81c\uacf5\ub41c\ub2e4. \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr 5.\uc778\ud130\ub137 \uc811\uc18d \ub514\ubc14\uc774\uc2a4 \ud655\uc778 # pi> ifconfig 6.\uc778\ud130\ub137 \uc811\uc18d \ub514\ubc14\uc774\uc2a4 \ud655\uc778 # \ud604\uc7ac \uc0ac\uc6a9\ub418\uace0 \uc788\ub294 \uc774\ub354\ub137 \uc5f0\uacb0 \ud3ec\ud2b8\ub294 eth0, wlan0, wwan0 \uc73c\ub85c \ud3ec\uc2dc\ub418\uace0 \uc788\uc73c\uba70, \ud604\uc7ac \uc0ac\uc6a9\ub418\uace0 \uc788\ub294 \ud3ec\ud2b8\ub97c \uc0ac\uc6a9 \uc911\uc9c0\ud55c\ub2e4. lo \ub294 \ub0b4\ubd80\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ud3ec\ud2b8 \uc784\uc73c\ub85c \uc0ac\uc6a9\uc911\uc9c0 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud55c\ub2e4. pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down pi> sudo ifconfig wwan0 donw pi> ifconfig 7.PPP \ub370\ubaac \uc2e4\ud589 \ubc0f \uc778\ud130\ub137 \uc5f0\uacb0 # pi> sudo pppd call lte 8.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778 # \uc0c8\ub85c\uc6b4 \ud130\ubbf8\ub110 \ucc3d\uc744 \ud558\ub098 \uc0dd\uc131\ud558\uc5ec \uc778\ud130\ub137 \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8 \ud655\uc778\uc744 \ud55c\ub2e4. pi> ifconfig pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"2.1.\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 PPP"},{"location":"use-raspberry-ppp/#1lte-module","text":"USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc804\uc6d0, \ubaa8\ub2c8\ud130, \ud0a4\ubcf4\ub4dc, \ub9c8\uc6b0\uc2a4 \ucf00\uc774\ube14 \uc5f0\uacb0. simcard \uc0bd\uc785","title":"1.LTE Module \uc5f0\uacb0"},{"location":"use-raspberry-ppp/#2usb","text":"USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 (USB \uc5f0\uacb0) \ubc0f \ud655\uc778 pi> cd ~ #--> \ud648\ub514\ub809\ud1a0\ub9ac \uc774\ub3d9 pi> ls /dev ttyUSB1, ttyUSB2, ttyUSB3 \uc758 \uc5f0\uacb0 \uc0c1\ud0dc\ub97c \ud655\uc778\ud55c\ub2e4.","title":"2.USB \uc5f0\uacb0\uc0c1\ud0dc \ud655\uc778"},{"location":"use-raspberry-ppp/#3pppd","text":"pi> sudo apt install ppp #--> pppd \ud504\ub85c\uadf8\ub7a8 \uc124\uce58","title":"3.pppd \ud504\ub85c\uadf8\ub7a8 \uc124\uce58 \ubc0f \uc2e4\ud589"},{"location":"use-raspberry-ppp/#4ppp","text":"\uc2a4\ud06c\ub9bd\ub4dc\ub97c wget \uc744 \uc774\uc6a9\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc \ud55c\ub2e4. pi> wget https://raw.githubusercontent.com/mmkio/ltekit/master/doc/pppd-ec25-make.sh pi> sudo chmod +x ./pppd-ec25-make.sh pi> sudo ./pppd-ec25-make.sh lte-internet.sktelecom.com #--> PN:'lte-internet.sktelecom.com' Note \"lte-internet.sktelecom.com\"\uc740 \ud1b5\uc2e0\uc0ac \uc811\uc18d APN\uc744 \ub098\ud0c0\ub0b4\uba70 \uc0ac\uc6a9\ub418\ub294 \ud1b5\uc2e0 SIM \uce74\ub4dc\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub41c\ub2e4. APN \uc740 SIM \uce74\ub4dc\uc640 \ud568\uaed8 \uc81c\uacf5\ub41c\ub2e4. \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr","title":"4.ppp \uc2a4\ud06c\ub9bd\ud2b8 \ud30c\uc77c\uc744 \uc2e4\ud589"},{"location":"use-raspberry-ppp/#5","text":"pi> ifconfig","title":"5.\uc778\ud130\ub137 \uc811\uc18d \ub514\ubc14\uc774\uc2a4 \ud655\uc778"},{"location":"use-raspberry-ppp/#6","text":"\ud604\uc7ac \uc0ac\uc6a9\ub418\uace0 \uc788\ub294 \uc774\ub354\ub137 \uc5f0\uacb0 \ud3ec\ud2b8\ub294 eth0, wlan0, wwan0 \uc73c\ub85c \ud3ec\uc2dc\ub418\uace0 \uc788\uc73c\uba70, \ud604\uc7ac \uc0ac\uc6a9\ub418\uace0 \uc788\ub294 \ud3ec\ud2b8\ub97c \uc0ac\uc6a9 \uc911\uc9c0\ud55c\ub2e4. lo \ub294 \ub0b4\ubd80\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ud3ec\ud2b8 \uc784\uc73c\ub85c \uc0ac\uc6a9\uc911\uc9c0 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud55c\ub2e4. pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down pi> sudo ifconfig wwan0 donw pi> ifconfig","title":"6.\uc778\ud130\ub137 \uc811\uc18d \ub514\ubc14\uc774\uc2a4 \ud655\uc778"},{"location":"use-raspberry-ppp/#7ppp","text":"pi> sudo pppd call lte","title":"7.PPP \ub370\ubaac \uc2e4\ud589 \ubc0f \uc778\ud130\ub137 \uc5f0\uacb0"},{"location":"use-raspberry-ppp/#8","text":"\uc0c8\ub85c\uc6b4 \ud130\ubbf8\ub110 \ucc3d\uc744 \ud558\ub098 \uc0dd\uc131\ud558\uc5ec \uc778\ud130\ub137 \ud1b5\uc2e0 \ud14c\uc2a4\ud2b8 \ud655\uc778\uc744 \ud55c\ub2e4. pi> ifconfig pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"8.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778"},{"location":"use-raspberry-qmi/","text":"QMI \uc124\uce58 \ubc0f \uc778\ud130\ub137 \uc5f0\uacb0 # 1.USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 2.USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 USB \uc5f0\uacb0 3.wwan0 \uc774\ub354\ub137 Port \uc0dd\uc131 \ud655\uc778 pi> ifconfig 8.\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \ub2e4\ub978 \uc778\ud130\ub137 \uc5f0\uacb0 \uc124\uc815 \uc0ac\uc6a9\uc911\uc9c0 pi> ifconfig pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down 3.libqmi-uitils \uc124\uce58 pi> sudo apt install libqmi-utils pi> sudo qmi-network /dev/cdc-wdm0 start pi> dhclient -v wwan0 * \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr 10.\uc774\ub354\ub137 \ud3ec\ud2b8 \uc0dd\uc131 \ubc0f \uc0c1\ud0dc\ud655\uc778 pi> ifconfig ppp0 10.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778 pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"QMI \uc124\uce58 \ubc0f \uc778\ud130\ub137 \uc5f0\uacb0"},{"location":"use-raspberry-qmi/#qmi","text":"1.USB LTE Module SIM \uce74\ub4dc \uc7a5\ucc29 2.USB LTE \ubaa8\ub4c8 \uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \uc5f0\uacb0 USB \uc5f0\uacb0 3.wwan0 \uc774\ub354\ub137 Port \uc0dd\uc131 \ud655\uc778 pi> ifconfig 8.\ub77c\uc988\ubca0\ub9ac\ud30c\uc774 \ub2e4\ub978 \uc778\ud130\ub137 \uc5f0\uacb0 \uc124\uc815 \uc0ac\uc6a9\uc911\uc9c0 pi> ifconfig pi> sudo ifconfig eth0 down pi> sudo ifconfig wlan0 down 3.libqmi-uitils \uc124\uce58 pi> sudo apt install libqmi-utils pi> sudo qmi-network /dev/cdc-wdm0 start pi> dhclient -v wwan0 * \uad6d\ub0b4 \uc8fc\uc694 APN \ubaa9\ub85d KT : lte.ktfwing.com SKT : lte.sktelecom.com, lte-internet.sktelecom.com, ltetab.sktelecom.com LG U+ : internet.lguplus.co.kr 10.\uc774\ub354\ub137 \ud3ec\ud2b8 \uc0dd\uc131 \ubc0f \uc0c1\ud0dc\ud655\uc778 pi> ifconfig ppp0 10.\ud1b5\uc2e0\uc5f0\uacb0\uc0c1\ud0dc\ud655\uc778 pi> ping 8.8.8.8 #\uad6c\uae00 DNS \uc11c\ubc84 \uc8fc\uc18c pi> ping www.google.com #\uad6c\uae00 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c","title":"QMI \uc124\uce58 \ubc0f \uc778\ud130\ub137 \uc5f0\uacb0"}]}